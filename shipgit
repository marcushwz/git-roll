#!/usr/bin/env bash

# Setting git-roll dir
# echo "$0" is telling which bash is using
# E.g. bash, /bin/bash and etc.
export SHIPGIT_DIR=$(dirname "$(echo "$0")")

usage() {
	echo "usage: shipgit <subcommand>"
	echo
	echo "Available subcommands are:"
	echo "   init      Initialize a new git repo with support for the branching model."
	echo "   feature   Manage your feature branches."
	echo "   release   Manage your release branches."
	echo "   hotfix    Manage your hotfix branches."
	echo
	echo "Try 'shipgit <subcommand> help' for details."
}

main() {
  # When number of arguments lesser than 1, show the usage messages
  if [ $# -lt 1 ]; then
    usage
    exit 1
  fi

	# Allow user to use both:
	# shipgit and sg as the command
	COMMAND="$0"
	if [ "$COMMAND" == "sg" ]; then
		COMMAND="shipgit"
	fi

	# Setting the subcommand
	# E.g shipgit feature
	# feature is the subcommand
	SUBCOMMAND="$1"
	# If subcommand is not supported show the usage messages
	# -e returns true if the target exists
	if [ ! -e "$SHIPGIT_DIR/shipgit-$SUBCOMMAND" ]; then
		usage
		exit 1
	fi

	# running command
	# . command is used to evaluate commands in the current execution context
	. "$SHIPGIT_DIR/shipgit-$SUBCOMMAND"

	SUBACTION="default"
	if [ "$2" != "" ]; then
		SUBACTION="$2"
	fi

	if ! type "cmd_$SUBACTION" >/dev/null 2>&1; then
		warn "Unknown subaction: '$SUBACTION'" 
		usage
		exit 1
	fi

	# run the specified action
	cmd_$SUBACTION "$@"
}

# @ Expands to the positional parameters, starting from one.
main "$@"
